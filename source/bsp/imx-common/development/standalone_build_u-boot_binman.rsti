Build imx-boot
..............

Get the needed binaries
~~~~~~~~~~~~~~~~~~~~~~~

To build the imx-boot, you need to **copy** these **files** to your **u-boot-imx
build directory** and rename them to fit with *mkimage tool* script:

*  **ARM Trusted firmware binary** (*mkimage tool* compatible format
   **bl31.bin**): bl31-|kernel-socname|.bin
*  **OPTEE image** (optional): tee.bin
*  **DDR firmware files** (*mkimage tool* compatible format
   **lpddr4_[i,d]mem_\*d_\*.bin**):
   lpddr4_dmem_1d_*.bin, lpddr4_dmem_2d_*.bin, lpddr4_imem_1d_*.bin,
   lpddr4_imem_2d_*.bin

If you already build our BSP with Yocto, you can get
the bl31-|kernel-socname|.bin, tee.bin and lpddr4_*.bin from the directory
mentioned here: |ref-bsp-images|

Or you can download the files here: |link-boot-tools|

.. warning::

   Make sure you rename the files you need so that they are compatible with the
   *mkimage tool*.

Build U-Boot
~~~~~~~~~~~~

.. build-uboot-marker

*  Get the U-Boot sources:

   .. code-block:: console

      host:~$ git clone git://git.phytec.de/u-boot-imx

*  To get the correct *U-Boot* **tag** you need to take a look at our release
   notes, which can be found here: `release notes <releasenotes_>`_
*  The **tag** needed at this release is called |u-boot-tag|
*  Check out the needed *U-Boot* **tag**:

.. code-block:: console
   :substitutions:

   host:~$ cd ~/u-boot-imx/
   host:~/u-boot-imx$ git fetch --all --tags
   host:~/u-boot-imx$ git checkout tags/|u-boot-tag|

*  Technically, you can now build the U-Boot, but practically there are some
   further steps necessary:

   *  Create your own development branch:

      .. code-block:: console

         host:~/u-boot-imx$ git switch --create <new-branch>

      .. note::

         You can name your development branch as you like, this is just an example.

*  Copy all binaries into the U-Boot build directory
*  Set up a build environment:

   .. code-block:: console
      :substitutions:

      host:~/u-boot-imx$ source /opt/|yocto-distro|/|yocto-sdk-rev|/environment-setup-cortexa55-phytec-linux

*  build flash.bin (imx-boot):

   .. code-block:: console
      :substitutions:

      host:~/u-boot-imx$ make |u-boot-defconfig|
      host:~/u-boot-imx$ make flash.bin

The flash.bin can be found at u-boot-imx/ directory and now can be flashed. A
chip-specific offset is needed:

.. _offset-table:

===== =================== ============================= ============
SoC   Offset User Area    Offset Boot Partition         eMMC Device
===== =================== ============================= ============
|soc| |u-boot-offset| kiB |u-boot-offset-boot-part| kiB /dev/|emmcdev|
===== =================== ============================= ============

E.g. flash SD card:

.. code-block:: console
   :substitutions:

   host:~/u-boot-imx$ sudo dd if=flash.bin of=/dev/sd[x] bs=1024 seek=|u-boot-offset| conv=sync

.. hint::
   The specific offset values are also declared in the Yocto variables "BOOTLOADER_SEEK" and "BOOTLOADER_SEEK_EMMC"
