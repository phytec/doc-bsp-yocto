eMMC Boot Partitions
....................

An eMMC device contains four different hardware partitions: user, boot1, boot2,
and rpmb.

The user partition is called the User Data Area in the JEDEC standard and is the
main storage partition. The partitions boot1 and boot2 can be used to host the
bootloader and are more reliable. Which partition the |soc| uses to load
the bootloader is controlled by the boot configuration of the eMMC device. The
partition rpmb is a small partition and can only be accessed via a trusted
mechanism.

Furthermore, the user partition can be divided into four user-defined General
Purpose Area Partitions. An explanation of this feature exceeds the scope of
this document. For further information, see the JEDEC Standard Chapter 7.2
Partition Management.

.. tip::

   Do not confuse eMMC partitions with partitions of a DOS, MBR, or GPT
   partition table.

The current PHYTEC BSP does not use the extra partitioning feature of eMMC
devices. The U-Boot is flashed at the beginning of the user partition.
The U-Boot environment is placed at a fixed location after the U-Boot. An MBR
partition table is used to create two partitions, a FAT32 boot, and ext4 rootfs
partition. They are located right after the U-Boot and the U-Boot environment.
The FAT32 boot partition contains the kernel and device tree.

With eMMC flash storage it is possible to use the dedicated boot partitions for
redundantly storing the bootloader. The U-Boot environment still resides in the
user area before the first partition. The user area also still contains the
bootloader which the image first shipped during its initialization process.
Below is an example, to flash the bootloader to one of the two boot partitions
and switch the boot device via userspace commands.

Change active Boot Partition via userspace Commands
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

On the host, run:

.. code-block:: console

   host:~$ scp imx-boot root@192.168.3.11:/tmp/

The partitions boot1 and boot2 are read-only by default. To write to them from
user space, you have to disable force_ro in the sysfs.

To manually write the bootloader to the eMMC boot partitions, first disable the
write protection:

.. code-block:: console
   :substitutions:

   target:~$ echo 0 > /sys/block/|emmcdev|boot0/force_ro
   target:~$ echo 0 > /sys/block/|emmcdev|boot1/force_ro

Write the bootloader to the eMMC boot partitions:

.. code-block:: console
   :substitutions:

   target:~$ dd if=/tmp/imx-boot of=/dev/|emmcdev|boot0 conv=fsync
   target:~$ dd if=/tmp/imx-boot of=/dev/|emmcdev|boot1 conv=fsync

Write the bootloader to the e.MMC user area:

.. code-block:: console
   :substitutions:

   target:~$ dd if=/tmp/imx-boot of=/dev/|emmcdev| bs=1024 seek=|u-boot-offset| conv=fsync

The following table is for the offset of the |soc| SoC:

===== =================== =========== ============== ===================
SoC   Offset User Area    Offset Boot eMMC Device    Bootloader Filename
                          Partition
===== =================== =========== ============== ===================
|soc| |u-boot-offset| kiB 0 kiB       /dev/|emmcdev| imx-boot
===== =================== =========== ============== ===================

After that set the boot partition from user space using the mmc tool:

(for 'boot0') :

.. code-block:: console
   :substitutions:

   target:~$ mmc bootpart enable 1 0 /dev/|emmcdev|

(for 'boot1') :

.. code-block:: console
   :substitutions:

   target:~$ mmc bootpart enable 2 0 /dev/|emmcdev|

.. _emmc-disable-boot-part:

To disable booting from the eMMC boot partitions simply enter the following
command:

.. code-block:: console
   :substitutions:

   target:~$ mmc bootpart enable 0 0 /dev/|emmcdev|

.. note::

  This setting is typically ignored by most CPUs, which default to using the user area

To choose back to the user area u-boot environment:

.. code-block:: console
   :substitutions:

   target:~$ mmc bootpart enable 7 0 /dev/|emmcdev|

.. emmc_boot_partions_end_label
