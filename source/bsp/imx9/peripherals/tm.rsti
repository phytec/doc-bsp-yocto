Thermal Management
------------------

U-Boot
......

The previous temperature control in the U-Boot was not satisfactory. Now the
u-boot has a temperature shutdown to prevent the board from getting too hot
during booting. The temperatures at which the shutdown occurs are identical to
those in the kernel.

The individual temperature ranges with the current temperature are displayed in
the boot log:

.. code-block::

   CPU:   Industrial temperature grade (-40C to 105C) at 33C

Kernel
......

The Linux kernel has integrated thermal management that is capable of monitoring
SoC temperatures, reducing the CPU frequency, driving fans, advising other
drivers to reduce the power consumption of devices, and – worst-case – shutting
down the system gracefully
(https://www.kernel.org/doc/Documentation/thermal/sysfs-api.txt).

This section describes how the thermal management kernel API is used for the
|soc| SoC platform. The |socfamily| has internal temperature sensors for the
SoC.

*  The current temperature can be read in millicelsius with:

   .. code-block:: console

      target:~$ cat /sys/class/thermal/thermal_zone0/temp

*  You will get, for example:

   .. code-block::

      49000

There are two trip points registered by the imx_thermal kernel driver. These
differ depending on the CPU variant. A distinction is made between Commercial,
Industrial and Extended Industrial.

=================== ========== ========== ===================
..                  Commercial Industrial Extended Industrial
=================== ========== ========== ===================
passive (warning)   85°C       95°C       115°C
critical (shutdown) 90°C       100°C      120°C
=================== ========== ========== ===================

(see kernel sysfs folder ``/sys/class/thermal/thermal_zone0/``)

The kernel thermal management uses these trip points to trigger events and
change the cooling behavior. The following thermal policies (also named thermal
governors) are available in the kernel: Step Wise and Power Allocator. The
default policy used in the BSP is step_wise.

.. tip::

   If the value of the SoC temperature in the sysfs file temp reaches
   *trip_point_1*, the board immediately shuts down to avoid any heat damage. If
   this doesn't meet you expectations, an external supervisor circuit that
   starts the module again with X_ONOFF signal when the temperature drops below
   a selected trip point can be implemented

.. note::

   The actual values of the thermal trip points may differ since we mount CPUs
   with different temperature grades.

PWM Fan
........

A PWM fan can be connected to the phyBOARD-Nash i.MX 93 connector X48 (label FAN).

Afterwards, a PWM fan overlay needs to be activated, otherwise PWM fan won't
be recognized.

.. code-block:: console

   target:~$ vi /boot/bootenv.txt

The bootenv.txt file should look like this (it can also contain other devicetree
overlays!):

.. code-block::

   overlays=imx93-phyboard-nash-pwm-fan.dtbo

The changes will be applied after a reboot:

   .. code-block:: console

      target:~$ reboot

For further information about devicetree overlays, read the |ref-dt| chapter.

The SoC only contains one temperature sensor which is already used by the
thermal frequency scaling. The fan thus can not be controlled by the kernel.
We use lmsensors with hwmon for this instead. lmsensors reads the temperature
periodically and adjusts output PWM duty-cycle accordingly. By default,
temperature threshold for PWM fan to activate is set to 60°C.

The settings can be configured in the configuration file:

.. code-block::

   /etc/fancontrol

Fan control is started by a systemd service during boot. This can be disabled
with:

.. code-block:: console

   target:~$ systemctl disable fancontrol
