I2C EEPROM on |som|
...........................

.. warning::

   The first 256 bytes of the EEPROM area (bus: I2C-0 addr: 0x50) should not be
   erased or overwritten. As this will influence the behavior of the bootloader.
   The board might not boot correctly anymore.

The I2C EEPROM on the |som| SoM is connected to I2C address 0x50 on the I2C-0
bus. It is possible to read and write directly to the device populated:

.. code-block:: console

   target:~$ hexdump -c /sys/class/i2c-dev/i2c-0/device/0-0050/eeprom

To read and print the first 1024 bytes of the EEPROM as a hex number,
execute:

.. code-block:: console

   target:~$ dd if=/sys/class/i2c-dev/i2c-0/device/0-0050/eeprom bs=1 count=1024  | od -x

To fill the 4KiB EEPROM (bus: I2C-0 addr: 0x50) with zeros leaving out the EEPROM data use:

.. code-block:: console

   target:~$ dd if=/dev/zero of=/sys/class/i2c-dev/i2c-0/device/0-0050/eeprom seek=1 bs=256 count=15


EEPROM SoM Detection
....................

The I2C EEPROM, populated on the |som|, is addressable over I2C address 0x50
on bus 0. PHYTEC uses this data area of 32 Bytes to store
information about the SoM. This includes PCB revision and mounting options.

The EEPROM data is read at a really early stage during startup. It is used to
select the correct RAM configuration. This makes it possible to use the same
bootloader image for different RAM sizes and choose the correct DTS overlays
automatically.

.. warning::

   The first 256 bytes of the EEPROM area (bus: I2C-0 addr: 0x50) should not be
   erased or overwritten. As this will influence the behavior of the bootloader.
   The board might not boot correctly anymore.

SoMs that are flashed with data format API revision 2 will print out information
about the module in the early stage.
