All interfaces offer a standard Linux network port that can be programmed using
the BSD socket interface. The whole network configuration is handled by
the systemd-networkd daemon. The relevant configuration files can be found on
the target in ``/lib/systemd/network/`` as well as the BSP in
``meta-ampliphy/recipes-core/systemd/systemd-conf``.

IP addresses can be configured within \*.network files. The interfaces are
configured to static IP as default. The default IP address and netmask for end0
is:

.. code-block::

   end0: 192.168.3.11/24

To configure end0 to dynamic IP over DHCP, go to
``/lib/systemd/network/\*-end0.network`` and delete the line:

.. code-block::

   Address=192.168.3.11/24

The DT Ethernet setup might be split into two files depending on your hardware
configuration: the module DT and the board-specific DT. The device tree set up
for the ethernet where the PHY is populated on the SoM can be found here:
|dt-somnetwork|.

|sbc-network|

Network Environment Customization
.................................

.. u-boot-network-environment-marker

U-boot network-environment
~~~~~~~~~~~~~~~~~~~~~~~~~~

*  To find the Ethernet settings in the target bootloader:

   .. code-block::

      u-boot=> printenv ipaddr serverip netmask

*  With your development host set to IP 192.168.3.10 and netmask 255.255.255.0,
   the target should return:

   .. code-block::

      u-boot=> printenv ipaddr serverip netmask
      ipaddr=192.168.3.11
      serverip=192.168.3.10
      netmask=255.225.255.0

*  If you need to make any changes:

   .. code-block::

      u-boot=> setenv <parameter> <value>

   <parameter> should be one of ipaddr, netmask, gatewayip or serverip.
   <value> will be the actual value of the chosen parameter.

*  The changes you made are temporary for now. To save these:

   .. code-block::

      u-boot=> saveenv

Here you can also change the IP address to DHCP instead of using a static one.

*  Configure:

   .. code-block::

      u-boot=> setenv ip dhcp

*  Set up paths for TFTP and NFS. A modification could look like this:

   .. code-block::

      u-boot=> setenv nfsroot /home/user/nfssrc

Please note that these modifications will only affect the bootloader settings.

.. tip::

   Variables like nfsroot and netargs can be overwritten by the U-boot External
   Environment. For netboot, the external environment will be loaded from tftp.
   For example, to locally set the nfsroot variable in a ``bootenv.txt`` file,
   locate the tftproot directory:

   .. code-block::

      nfsroot=/home/user/nfssrc

   There is no need to store the info on the target. Please note that this does
   not work for variables like ipaddr or serveraddr as they need to be already
   set when the external environment is being loaded.

.. kernel-network-environment-marker

Kernel network-environment
~~~~~~~~~~~~~~~~~~~~~~~~~~

*  Find the ethernet settings for end0 in the target kernel:

   .. code-block:: console

      target:~$ ip -statistics address show end0
      2: end0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc mq state UP group default qlen 1000
          link/ether 50:2d:f4:19:d6:33 brd ff:ff:ff:ff:ff:ff
          RX:  bytes packets errors dropped  missed   mcast
                   0       0      0       0       0       0
          TX:  bytes packets errors dropped carrier collsns
                   0       0      0       0       0       0

*  Temporary adaption of the end0 configuration:

   .. code-block:: console

      target:~$ ip address add 192.168.3.11/24 dev end0
