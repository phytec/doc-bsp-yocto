RS485 full-duplex
~~~~~~~~~~~~~~~~~

For full-duplex mode your connection setup should look like this:

.. image:: /bsp/peripherals/images/RS485_fullduplex_connection.png

Which function is on which pin is described in the hardware manual.

For full-duplex mode you can set the ioctls manually like this:

.. code-block:: console
   :substitutions:

   target:~$ rs485conf /dev/|serial-uart| -e 1 -r 1
   target:~$ rs485conf /dev/|serial-uart|
   = Current configuration:
   RS485 enabled:                true
   RTS on send:                  high
   RTS after send:               low
   RTS delay before send:        0
   RTS delay after send:         0
   Receive during sending data:  true
   Bus termination enabled:  false

Also here you can do the echo test to see if sending and receiving works:

.. code-block:: console
   :substitutions:

   target1:~$ cat /dev/|serial-uart|
   target2:~$ echo test > /dev/|serial-uart|

You should see "test" printed out on target1. You can also switch the roles and
send on target2 and receive on target1.

To check if the full-duplex operation works, you need to use the
linux-serial-test tool:

.. code-block:: console
   :substitutions:

   target1:~$ linux-serial-test -s -e -f -p /dev/|serial-uart| -b 115200 --rs485 0 -o 10 -i 15 -W 2
   ...
   /dev/|serial-uart|: count for this session: rx=114660, tx=118755, rx err=0
   target2:~$ linux-serial-test -s -e -f -p /dev/|serial-uart| -b 115200 --rs485 0 -o 10 -i 15 -W 2
   ...
   /dev/|serial-uart|: count for this session: rx=118755, tx=114660, rx err=0

In this example both targets will send and receive simultaneously. They will
receive for 15sec and send for 10sec. The receiver needs to receive a bit
longer, so that all sent messages will get received. Remember to start both
targets almost simultaneously. A small difference in start time is accounted
for with the ``-W 2`` option. At the end the program will print the final
"count for this session". There you can check that all transmitted frames were
received.

All the test examples are target to target, but can also be done with host to
target with a USB to rs485 converter. You may need to adjust the interfaces for
commands to work on the host then.
