PCIe
....

The phyCORE-|soc| has one Mini-PCIe slot. In general, PCIe autodetects new
devices on the bus. After connecting the device and booting up the system, you
can use the command lspci to see all PCIe devices recognized.

*  Type:

::

   target$ lspci -v

*  You will receive:

::

   00:00.0 PCI bridge: Synopsys, Inc. Device abcd (rev 01) (prog-if 00 [Normal decode])
           Flags: bus master, fast devsel, latency 0, IRQ 218
           Memory at 18000000 (64-bit, non-prefetchable) [size=1M]
           Bus: primary=00, secondary=01, subordinate=ff, sec-latency=0
           I/O behind bridge: None
           Memory behind bridge: 18100000-181fffff [size=1M]
           Prefetchable memory behind bridge: None
           [virtual] Expansion ROM at 18200000 [disabled] [size=64K]
           Capabilities: [40] Power Management version 3
           Capabilities: [50] MSI: Enable+ Count=1/1 Maskable+ 64bit+
           Capabilities: [70] Express Root Port (Slot-), MSI 00
           Capabilities: [100] Advanced Error Reporting
           Capabilities: [148] L1 PM Substates
           Kernel driver in use: dwc3-haps
 
   01:00.0 Network controller: Intel Corporation WiFi Link 5100
           Subsystem: Intel Corporation WiFi Link 5100 AGN
           Flags: fast devsel
           Memory at 18100000 (64-bit, non-prefetchable) [disabled] [size=8K]
           Capabilities: [c8] Power Management version 3
           Capabilities: [d0] MSI: Enable- Count=1/1 Maskable- 64bit+
           Capabilities: [e0] Express Endpoint, MSI 00
           Capabilities: [100] Advanced Error Reporting
           Capabilities: [140] Device Serial Number 00-24-d6-ff-ff-84-0d-1e
           Kernel modules: iwlwifi

In this example, the PCIe device is the Intel Corporation WiFi Link 5100.

For PCIe devices, you have to enable the correct driver in the kernel
configuration. This WLAN card, for example, is manufactured by IntelKconfig. The
option for the driver, which must be enabled, is named CONFIG_IWLWIFI and can be
found under Intel Wireless WiFi Next Gen AGN - Wireless-N/Advanced-N/Ultimat in
the kernel configuration.

*  In order to activate the driver, follow the instructions from our Yocto
   manual: `Kernel and Bootloader Configuration
   <https://www.phytec.de/cdocuments/?doc=UIHsG#L813e-A12YoctoReferenceManualHeadHardknott-KernelandBootloaderConfiguration>`__

   -  The linux-imx is represented by: virtual/kernel

For some devices like the WLAN card, additional binary firmware blobs are
needed. These firmware blobs have to be placed in /lib/firmware/ before the
device can be used.

*  Type:

::

   host$ scp -r <firmware> root@192.168.3.11:/lib/firmware

*  For example, if you try to bring up the network interface:

::

   target$ ip link set up wlp1s0

*  You will get the following output on the serial console:

::

   [   58.682104] iwlwifi 0000:01:00.0: L1 Disabled - LTR Disabled
   [   58.690822] iwlwifi 0000:01:00.0: L1 Disabled - LTR Disabled
   [   58.696577] iwlwifi 0000:01:00.0: Radio type=0x1-0x2-0x0
   [   58.831022] iwlwifi 0000:01:00.0: L1 Disabled - LTR Disabled
   [   58.839679] iwlwifi 0000:01:00.0: L1 Disabled - LTR Disabled
   [   58.845435] iwlwifi 0000:01:00.0: Radio type=0x1-0x2-0x0
   [   58.902797] IPv6: ADDRCONF(NETDEV_UP): wlp1s0: link is not ready

.. tip::

   Some PCIe devices, e.g. the Ethernet card, may function properly even if no
   firmware blob is loaded from /lib/firmware/ and you received an error message
   as shown in the first line of the output above. This is because some
   manufacturers provide the firmware as a fallback on the card itself. In this
   case, the behavior and output depend strongly on the manufacturer's firmware.
